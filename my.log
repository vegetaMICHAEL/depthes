nohup: ignoring input
Constructing DeepLabv3+ model...
Backbone: Xception
Number of classes: 1
Output stride: 16
Number of Input Channels: 3
DeepLabv3_plus(
  (xception_features): Xception(
    (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
    (bn1): SynchronizedBatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (conv2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn2): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (block1): Block(
      (skip): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (skipbn): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): SeparableConv2d_same(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), groups=64, bias=False)
          (pointwise): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (1): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): SeparableConv2d_same(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), groups=128, bias=False)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (4): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (5): SeparableConv2d_same(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), groups=128, bias=False)
          (pointwise): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
      )
    )
    (block2): Block(
      (skip): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (skipbn): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), groups=128, bias=False)
          (pointwise): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), groups=256, bias=False)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), groups=256, bias=False)
          (pointwise): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
      )
    )
    (block3): Block(
      (skip): Conv2d(256, 728, kernel_size=(1, 1), stride=(2, 2), bias=False)
      (skipbn): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), groups=256, bias=False)
          (pointwise): Conv2d(256, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(2, 2), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
      )
    )
    (block4): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block5): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block6): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block7): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block8): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block9): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block10): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block11): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block12): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block13): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block14): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block15): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block16): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block17): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block18): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block19): Block(
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU(inplace=True)
        (7): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (8): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (block20): Block(
      (skip): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (skipbn): SynchronizedBatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (rep): Sequential(
        (0): ReLU(inplace=True)
        (1): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 728, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (2): SynchronizedBatchNorm2d(728, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
        (4): SeparableConv2d_same(
          (conv1): Conv2d(728, 728, kernel_size=(3, 3), stride=(1, 1), groups=728, bias=False)
          (pointwise): Conv2d(728, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (5): SynchronizedBatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): SeparableConv2d_same(
          (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), groups=1024, bias=False)
          (pointwise): Conv2d(1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
      )
    )
    (conv3): SeparableConv2d_same(
      (conv1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), dilation=(2, 2), groups=1024, bias=False)
      (pointwise): Conv2d(1024, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn3): SynchronizedBatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv4): SeparableConv2d_same(
      (conv1): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), dilation=(2, 2), groups=1536, bias=False)
      (pointwise): Conv2d(1536, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn4): SynchronizedBatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv5): SeparableConv2d_same(
      (conv1): Conv2d(1536, 1536, kernel_size=(3, 3), stride=(1, 1), dilation=(2, 2), groups=1536, bias=False)
      (pointwise): Conv2d(1536, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
    )
    (bn5): SynchronizedBatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  )
  (context_modules): MultiAspectGCAttention(
    (conv_mask): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    (sigmoid): Sigmoid()
    (channel_add_conv): Sequential(
      (0): Conv2d(256, 16, kernel_size=(1, 1), stride=(1, 1))
      (1): LayerNorm((16, 1, 1), eps=1e-05, elementwise_affine=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(16, 256, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (aspp1): ASPP_module(
    (atrous_convolution): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (bn): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
  )
  (aspp2): ASPP_module(
    (atrous_convolution): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False)
    (bn): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
  )
  (aspp3): ASPP_module(
    (atrous_convolution): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False)
    (bn): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
  )
  (aspp4): ASPP_module(
    (atrous_convolution): Conv2d(2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False)
    (bn): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
  )
  (relu): ReLU()
  (vae_relu): ReLU()
  (global_avg_pool): Sequential(
    (0): AdaptiveAvgPool2d(output_size=(1, 1))
    (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (2): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): ReLU()
  )
  (conv1): Conv2d(1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn1): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv2): Conv2d(128, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
  (bn2): SynchronizedBatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (last_conv): Sequential(
    (0): Conv2d(304, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (4): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (fc_e0): Linear(in_features=256, out_features=256, bias=True)
  (fc_e1): Linear(in_features=256, out_features=128, bias=True)
  (fc_mean): Linear(in_features=128, out_features=256, bias=True)
  (fc_var): Linear(in_features=128, out_features=256, bias=True)
  (fc_d0): Linear(in_features=256, out_features=128, bias=True)
  (fc_d1): Linear(in_features=128, out_features=256, bias=True)
  (fc_logits): Linear(in_features=256, out_features=256, bias=True)
)
Training model named:
  panodepth
Models and tensorboard events files are saved to:
 Logs/3d60_deeplab_sitanfu
Training is using:
  cuda
  0%|          | 0/44 [00:00<?, ?it/s]Training Epoch_0:   0%|          | 0/44 [00:00<?, ?it/s]Training Epoch_0:   2%|▏         | 1/44 [00:13<09:46, 13.65s/it]Training Epoch_0:   5%|▍         | 2/44 [00:26<09:10, 13.11s/it]Training Epoch_0:   7%|▋         | 3/44 [00:39<08:48, 12.90s/it]Training Epoch_0:   9%|▉         | 4/44 [00:51<08:27, 12.69s/it]Training Epoch_0:  11%|█▏        | 5/44 [01:04<08:17, 12.75s/it]Training Epoch_0:  14%|█▎        | 6/44 [01:17<08:14, 13.00s/it]Training Epoch_0:  16%|█▌        | 7/44 [01:30<07:59, 12.96s/it]Training Epoch_0:  18%|█▊        | 8/44 [01:43<07:44, 12.89s/it]Training Epoch_0:  20%|██        | 9/44 [01:56<07:30, 12.87s/it]Training Epoch_0:  23%|██▎       | 10/44 [02:08<07:15, 12.82s/it]Training Epoch_0:  25%|██▌       | 11/44 [02:21<06:57, 12.66s/it]Training Epoch_0:  27%|██▋       | 12/44 [02:34<06:47, 12.73s/it]Training Epoch_0:  30%|██▉       | 13/44 [02:47<06:38, 12.86s/it]Training Epoch_0:  32%|███▏      | 14/44 [02:59<06:22, 12.75s/it]Training Epoch_0:  34%|███▍      | 15/44 [03:12<06:06, 12.63s/it]Training Epoch_0:  36%|███▋      | 16/44 [03:24<05:54, 12.66s/it]Training Epoch_0:  39%|███▊      | 17/44 [03:37<05:44, 12.75s/it]Training Epoch_0:  41%|████      | 18/44 [03:50<05:32, 12.80s/it]Training Epoch_0:  43%|████▎     | 19/44 [04:03<05:19, 12.77s/it]Training Epoch_0:  45%|████▌     | 20/44 [04:15<05:01, 12.55s/it]Training Epoch_0:  48%|████▊     | 21/44 [04:27<04:45, 12.43s/it]Training Epoch_0:  50%|█████     | 22/44 [04:40<04:35, 12.51s/it]Training Epoch_0:  52%|█████▏    | 23/44 [04:52<04:19, 12.34s/it]Training Epoch_0:  55%|█████▍    | 24/44 [05:04<04:05, 12.30s/it]Training Epoch_0:  57%|█████▋    | 25/44 [05:17<03:56, 12.44s/it]Training Epoch_0:  59%|█████▉    | 26/44 [05:29<03:44, 12.47s/it]Training Epoch_0:  61%|██████▏   | 27/44 [05:42<03:30, 12.41s/it]Training Epoch_0:  64%|██████▎   | 28/44 [05:54<03:20, 12.51s/it]Training Epoch_0:  66%|██████▌   | 29/44 [06:07<03:07, 12.51s/it]Training Epoch_0:  68%|██████▊   | 30/44 [06:20<02:57, 12.68s/it]Training Epoch_0:  70%|███████   | 31/44 [06:34<02:48, 13.00s/it]Training Epoch_0:  73%|███████▎  | 32/44 [06:46<02:34, 12.90s/it]Training Epoch_0:  75%|███████▌  | 33/44 [06:59<02:20, 12.75s/it]Training Epoch_0:  77%|███████▋  | 34/44 [07:11<02:06, 12.64s/it]Training Epoch_0:  80%|███████▉  | 35/44 [07:24<01:54, 12.72s/it]Training Epoch_0:  82%|████████▏ | 36/44 [07:36<01:39, 12.45s/it]Training Epoch_0:  84%|████████▍ | 37/44 [07:49<01:28, 12.67s/it]Training Epoch_0:  86%|████████▋ | 38/44 [08:02<01:16, 12.75s/it]Training Epoch_0:  89%|████████▊ | 39/44 [08:14<01:03, 12.65s/it]Training Epoch_0:  91%|█████████ | 40/44 [08:26<00:49, 12.45s/it]Training Epoch_0:  93%|█████████▎| 41/44 [08:38<00:37, 12.35s/it]Training Epoch_0:  95%|█████████▌| 42/44 [08:51<00:24, 12.45s/it]Training Epoch_0:  98%|█████████▊| 43/44 [09:04<00:12, 12.49s/it]Training Epoch_0: 100%|██████████| 44/44 [09:16<00:00, 12.51s/it]Training Epoch_0: 100%|██████████| 44/44 [09:16<00:00, 12.65s/it]
  0%|          | 0/4 [00:00<?, ?it/s]Validating Epoch_0:   0%|          | 0/4 [00:00<?, ?it/s]Validating Epoch_0:  25%|██▌       | 1/4 [00:11<00:33, 11.18s/it]Validating Epoch_0:  50%|█████     | 2/4 [00:22<00:22, 11.38s/it]Validating Epoch_0:  75%|███████▌  | 3/4 [00:34<00:11, 11.55s/it]Validating Epoch_0: 100%|██████████| 4/4 [00:46<00:00, 11.92s/it]Validating Epoch_0: 100%|██████████| 4/4 [00:46<00:00, 11.74s/it]
depth loss is 6.9131364822387695, KL_loss is 31.898218154907227
depth loss is 6.8234944343566895, KL_loss is 32.07612228393555
depth loss is 7.368171691894531, KL_loss is 31.98272132873535
depth loss is 7.242632865905762, KL_loss is 31.961654663085938
  0%|          | 0/44 [00:00<?, ?it/s]Training Epoch_1:   0%|          | 0/44 [00:00<?, ?it/s]Training Epoch_1:   2%|▏         | 1/44 [00:12<09:02, 12.61s/it]Training Epoch_1:   5%|▍         | 2/44 [00:24<08:39, 12.38s/it]Training Epoch_1:   7%|▋         | 3/44 [00:37<08:39, 12.67s/it]Training Epoch_1:   9%|▉         | 4/44 [00:50<08:25, 12.63s/it]Training Epoch_1:  11%|█▏        | 5/44 [01:02<08:07, 12.49s/it]Training Epoch_1:  14%|█▎        | 6/44 [01:15<07:57, 12.58s/it]Training Epoch_1:  16%|█▌        | 7/44 [01:28<07:48, 12.65s/it]Training Epoch_1:  18%|█▊        | 8/44 [01:41<07:38, 12.74s/it]Training Epoch_1:  20%|██        | 9/44 [01:53<07:23, 12.68s/it]Training Epoch_1:  23%|██▎       | 10/44 [02:06<07:11, 12.69s/it]Training Epoch_1:  25%|██▌       | 11/44 [02:19<07:03, 12.82s/it]Training Epoch_1:  27%|██▋       | 12/44 [02:31<06:41, 12.54s/it]Training Epoch_1:  30%|██▉       | 13/44 [02:44<06:33, 12.68s/it]Training Epoch_1:  32%|███▏      | 14/44 [02:56<06:16, 12.55s/it]Training Epoch_1:  34%|███▍      | 15/44 [03:09<06:05, 12.59s/it]Training Epoch_1:  36%|███▋      | 16/44 [03:21<05:50, 12.52s/it]Training Epoch_1:  39%|███▊      | 17/44 [03:34<05:37, 12.51s/it]Training Epoch_1:  41%|████      | 18/44 [03:46<05:25, 12.54s/it]Training Epoch_1:  43%|████▎     | 19/44 [03:59<05:13, 12.56s/it]Training Epoch_1:  45%|████▌     | 20/44 [04:12<05:03, 12.66s/it]Training Epoch_1:  48%|████▊     | 21/44 [04:24<04:50, 12.64s/it]Training Epoch_1:  50%|█████     | 22/44 [04:37<04:39, 12.72s/it]Training Epoch_1:  52%|█████▏    | 23/44 [04:50<04:27, 12.72s/it]Training Epoch_1:  55%|█████▍    | 24/44 [05:03<04:15, 12.76s/it]Training Epoch_1:  57%|█████▋    | 25/44 [05:16<04:01, 12.73s/it]Training Epoch_1:  59%|█████▉    | 26/44 [05:28<03:47, 12.62s/it]Training Epoch_1:  61%|██████▏   | 27/44 [05:40<03:34, 12.61s/it]Training Epoch_1:  64%|██████▎   | 28/44 [05:53<03:21, 12.57s/it]Training Epoch_1:  66%|██████▌   | 29/44 [06:06<03:09, 12.63s/it]Training Epoch_1:  68%|██████▊   | 30/44 [06:18<02:55, 12.50s/it]Training Epoch_1:  70%|███████   | 31/44 [06:30<02:41, 12.42s/it]Training Epoch_1:  73%|███████▎  | 32/44 [06:43<02:29, 12.43s/it]Training Epoch_1:  75%|███████▌  | 33/44 [06:55<02:15, 12.34s/it]Training Epoch_1:  77%|███████▋  | 34/44 [07:08<02:05, 12.51s/it]Training Epoch_1:  80%|███████▉  | 35/44 [07:20<01:52, 12.48s/it]Training Epoch_1:  82%|████████▏ | 36/44 [07:33<01:41, 12.69s/it]Training Epoch_1:  84%|████████▍ | 37/44 [07:46<01:28, 12.69s/it]Training Epoch_1:  86%|████████▋ | 38/44 [07:59<01:16, 12.75s/it]Training Epoch_1:  89%|████████▊ | 39/44 [08:11<01:02, 12.57s/it]Training Epoch_1:  91%|█████████ | 40/44 [08:23<00:49, 12.44s/it]Training Epoch_1:  93%|█████████▎| 41/44 [08:36<00:37, 12.53s/it]Training Epoch_1:  95%|█████████▌| 42/44 [08:48<00:24, 12.47s/it]Training Epoch_1:  98%|█████████▊| 43/44 [09:00<00:12, 12.39s/it]Training Epoch_1: 100%|██████████| 44/44 [09:12<00:00, 12.27s/it]Training Epoch_1: 100%|██████████| 44/44 [09:12<00:00, 12.56s/it]
  0%|          | 0/4 [00:00<?, ?it/s]Validating Epoch_1:   0%|          | 0/4 [00:00<?, ?it/s]Validating Epoch_1:  25%|██▌       | 1/4 [00:11<00:34, 11.60s/it]Validating Epoch_1:  50%|█████     | 2/4 [00:23<00:23, 11.77s/it]Validating Epoch_1:  75%|███████▌  | 3/4 [00:35<00:11, 11.67s/it]Validating Epoch_1: 100%|██████████| 4/4 [00:46<00:00, 11.41s/it]Validating Epoch_1: 100%|██████████| 4/4 [00:46<00:00, 11.51s/it]
depth loss is 14.45795726776123, KL_loss is 31.847976684570312
depth loss is 14.316107749938965, KL_loss is 32.07818603515625
depth loss is 15.168416976928711, KL_loss is 31.96807861328125
depth loss is 14.994797706604004, KL_loss is 31.9454345703125
  0%|          | 0/44 [00:00<?, ?it/s]Training Epoch_2:   0%|          | 0/44 [00:00<?, ?it/s]Training Epoch_2:   2%|▏         | 1/44 [00:12<09:06, 12.72s/it]Training Epoch_2:   5%|▍         | 2/44 [00:25<08:47, 12.55s/it]Training Epoch_2:   7%|▋         | 3/44 [00:37<08:28, 12.40s/it]Training Epoch_2:   9%|▉         | 4/44 [00:49<08:15, 12.38s/it]Training Epoch_2:  11%|█▏        | 5/44 [01:02<08:10, 12.57s/it]Training Epoch_2:  14%|█▎        | 6/44 [01:16<08:08, 12.87s/it]Training Epoch_2:  16%|█▌        | 7/44 [01:28<07:56, 12.88s/it]Training Epoch_2:  18%|█▊        | 8/44 [01:41<07:41, 12.83s/it]Training Epoch_2:  20%|██        | 9/44 [01:53<07:22, 12.65s/it]Training Epoch_2:  23%|██▎       | 10/44 [02:06<07:10, 12.66s/it]Training Epoch_2:  25%|██▌       | 11/44 [02:19<06:57, 12.64s/it]Training Epoch_2:  27%|██▋       | 12/44 [02:31<06:37, 12.42s/it]Training Epoch_2:  30%|██▉       | 13/44 [02:43<06:27, 12.48s/it]Training Epoch_2:  32%|███▏      | 14/44 [02:56<06:17, 12.58s/it]Training Epoch_2:  34%|███▍      | 15/44 [03:09<06:04, 12.57s/it]Training Epoch_2:  36%|███▋      | 16/44 [03:21<05:48, 12.44s/it]Training Epoch_2:  39%|███▊      | 17/44 [03:33<05:34, 12.39s/it]Training Epoch_2:  41%|████      | 18/44 [03:45<05:21, 12.36s/it]Training Epoch_2:  43%|████▎     | 19/44 [03:58<05:11, 12.44s/it]Training Epoch_2:  45%|████▌     | 20/44 [04:12<05:11, 12.98s/it]Training Epoch_2:  48%|████▊     | 21/44 [04:25<05:00, 13.06s/it]Training Epoch_2:  50%|█████     | 22/44 [04:38<04:41, 12.78s/it]Training Epoch_2:  52%|█████▏    | 23/44 [04:50<04:23, 12.57s/it]Training Epoch_2:  55%|█████▍    | 24/44 [05:02<04:07, 12.39s/it]Training Epoch_2:  57%|█████▋    | 25/44 [05:14<03:57, 12.50s/it]Training Epoch_2:  59%|█████▉    | 26/44 [05:28<03:48, 12.72s/it]Training Epoch_2:  61%|██████▏   | 27/44 [05:40<03:33, 12.59s/it]Training Epoch_2:  64%|██████▎   | 28/44 [05:52<03:21, 12.57s/it]Training Epoch_2:  66%|██████▌   | 29/44 [06:05<03:10, 12.68s/it]Training Epoch_2:  68%|██████▊   | 30/44 [06:17<02:53, 12.38s/it]Training Epoch_2:  70%|███████   | 31/44 [06:30<02:43, 12.55s/it]Training Epoch_2:  73%|███████▎  | 32/44 [06:42<02:30, 12.51s/it]Training Epoch_2:  75%|███████▌  | 33/44 [06:55<02:18, 12.63s/it]Training Epoch_2:  77%|███████▋  | 34/44 [07:07<02:04, 12.44s/it]Training Epoch_2:  80%|███████▉  | 35/44 [07:20<01:52, 12.53s/it]Training Epoch_2:  82%|████████▏ | 36/44 [07:33<01:41, 12.64s/it]Training Epoch_2:  84%|████████▍ | 37/44 [07:45<01:28, 12.61s/it]Training Epoch_2:  86%|████████▋ | 38/44 [07:58<01:15, 12.54s/it]Training Epoch_2:  89%|████████▊ | 39/44 [08:11<01:02, 12.59s/it]Training Epoch_2:  91%|█████████ | 40/44 [08:22<00:49, 12.38s/it]Training Epoch_2:  93%|█████████▎| 41/44 [08:36<00:38, 12.67s/it]Training Epoch_2:  95%|█████████▌| 42/44 [08:48<00:25, 12.54s/it]Training Epoch_2:  98%|█████████▊| 43/44 [09:00<00:12, 12.49s/it]Training Epoch_2: 100%|██████████| 44/44 [09:13<00:00, 12.65s/it]Training Epoch_2: 100%|██████████| 44/44 [09:13<00:00, 12.59s/it]
  0%|          | 0/4 [00:00<?, ?it/s]Validating Epoch_2:   0%|          | 0/4 [00:00<?, ?it/s]Validating Epoch_2:  25%|██▌       | 1/4 [00:12<00:38, 12.98s/it]Validating Epoch_2:  50%|█████     | 2/4 [00:25<00:24, 12.44s/it]Validating Epoch_2:  75%|███████▌  | 3/4 [00:36<00:12, 12.14s/it]Validating Epoch_2: 100%|██████████| 4/4 [00:48<00:00, 11.82s/it]Validating Epoch_2: 100%|██████████| 4/4 [00:48<00:00, 12.04s/it]
depth loss is 14.509249687194824, KL_loss is 31.82379722595215
depth loss is 14.328073501586914, KL_loss is 32.028480529785156
depth loss is 15.168808937072754, KL_loss is 31.940418243408203
depth loss is 15.01870059967041, KL_loss is 31.909223556518555
  0%|          | 0/44 [00:00<?, ?it/s]Training Epoch_3:   0%|          | 0/44 [00:00<?, ?it/s]Training Epoch_3:   2%|▏         | 1/44 [00:12<09:05, 12.68s/it]Training Epoch_3:   5%|▍         | 2/44 [00:25<08:44, 12.49s/it]Training Epoch_3:   7%|▋         | 3/44 [00:37<08:34, 12.54s/it]Training Epoch_3:   9%|▉         | 4/44 [00:50<08:28, 12.71s/it]Training Epoch_3:  11%|█▏        | 5/44 [01:03<08:21, 12.86s/it]Training Epoch_3:  14%|█▎        | 6/44 [01:16<08:10, 12.92s/it]Training Epoch_3:  16%|█▌        | 7/44 [01:29<07:55, 12.85s/it]Training Epoch_3:  18%|█▊        | 8/44 [01:42<07:39, 12.75s/it]Training Epoch_3:  20%|██        | 9/44 [01:54<07:23, 12.66s/it]Training Epoch_3:  23%|██▎       | 10/44 [02:07<07:09, 12.63s/it]Training Epoch_3:  25%|██▌       | 11/44 [02:20<07:01, 12.77s/it]